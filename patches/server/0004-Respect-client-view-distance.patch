From b48813edcf33c0fe11b809ed13b2e5c86d146376 Mon Sep 17 00:00:00 2001
From: froobynooby <froobynooby@froobworld.com>
Date: Wed, 20 May 2020 16:26:35 +0930
Subject: [PATCH] Respect client view distance

---
 .../net/minecraft/server/EntityPlayer.java    |  1 +
 .../net/minecraft/server/PlayerChunkMap.java  | 30 +++++++++++++++++--
 .../java/net/minecraft/server/PlayerList.java |  5 +++-
 3 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 11fa231ca..8608b2529 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -1697,6 +1697,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         }
         this.locale = packetplayinsettings.locale;
         this.clientViewDistance = packetplayinsettings.viewDistance;
+        getWorldServer().getChunkProvider().playerChunkMap.updateMaps(this); // Nabulus - respect client view distance
         // CraftBukkit end
         this.bY = packetplayinsettings.d();
         this.bZ = packetplayinsettings.e();
diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index 6016a7bc5..de5d32b51 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -222,7 +222,7 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
         }
 
         player.needsChunkCenterUpdate = true;
-        this.playerViewDistanceBroadcastMap.add(player, chunkX, chunkZ, effectiveNoTickViewDistance + 1); // clients need an extra neighbour to render the full view distance configured
+        this.playerViewDistanceBroadcastMap.add(player, chunkX, chunkZ, getBroadcastViewDistance(player) + 1); // clients need an extra neighbour to render the full view distance configured
         player.needsChunkCenterUpdate = false;
         // Paper end - no-tick view distance
     }
@@ -271,11 +271,32 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
         }
 
         player.needsChunkCenterUpdate = true;
-        this.playerViewDistanceBroadcastMap.update(player, chunkX, chunkZ, effectiveNoTickViewDistance + 1); // clients need an extra neighbour to render the full view distance configured
+        // Nabulus start - Respect client render distance
+        //this.playerViewDistanceBroadcastMap.update(player, chunkX, chunkZ, effectiveNoTickViewDistance + 1); // clients need an extra neighbour to render the full view distance configured
+        this.updateClientViewDistance(player);
+        this.playerViewDistanceBroadcastMap.update(player, chunkX, chunkZ, getBroadcastViewDistance(player) + 1);
+        // Nabulus end
         player.needsChunkCenterUpdate = false;
         // Paper end - no-tick view distance
     }
     // Paper end
+    //Nabulus start - Respect client render distance
+
+    public int getBroadcastViewDistance(EntityPlayer entityPlayer) {
+        return Math.max(getEffectiveViewDistance(), Math.min(getEffectiveNoTickViewDistance(), entityPlayer.clientViewDistance == null ? 0 : entityPlayer.clientViewDistance));
+    }
+
+    public void updateClientViewDistance(EntityPlayer entityPlayer) {
+        int newViewDistance = getBroadcastViewDistance(entityPlayer);
+        if (newViewDistance + 1 != playerViewDistanceBroadcastMap.getLastViewDistance(entityPlayer)) {
+            PacketPlayOutViewDistance packet = new PacketPlayOutViewDistance(newViewDistance);
+            if (entityPlayer.playerConnection != null) {
+                entityPlayer.playerConnection.sendPacket(packet);
+            }
+        }
+    }
+
+    //Nabulus end
 
     // Tuinity start
     public static enum RegionData implements com.tuinity.tuinity.chunk.SingleThreadChunkRegionManager.RegionDataCreator<RegionData> {
@@ -1559,7 +1580,10 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
                 PlayerConnection connection = player.playerConnection;
                 if (connection != null) {
                     // moved in from PlayerList
-                    connection.sendPacket(new PacketPlayOutViewDistance(loadViewDistance));
+                    // Nabulus start - Respect client view distance
+                    //connection.sendPacket(new PacketPlayOutViewDistance(loadViewDistance));
+                    updateClientViewDistance(player);
+                    // Nabulus end
                 }
                 this.updateMaps(player);
             }
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 787e80c50..01acf8bc2 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -845,7 +845,10 @@ public abstract class PlayerList {
         // CraftBukkit start
         WorldData worlddata = worldserver1.getWorldData();
         entityplayer1.playerConnection.sendPacket(new PacketPlayOutRespawn(worldserver1.getDimensionManager(), worldserver1.getDimensionKey(), BiomeManager.a(worldserver1.getSeed()), entityplayer1.playerInteractManager.getGameMode(), entityplayer1.playerInteractManager.c(), worldserver1.isDebugWorld(), worldserver1.isFlatWorld(), flag));
-        entityplayer1.playerConnection.sendPacket(new PacketPlayOutViewDistance(worldserver1.getChunkProvider().playerChunkMap.getLoadViewDistance())); // Spigot // Paper - no-tick view distance
+        // Nabulus start - Respect client view distance
+        //entityplayer1.playerConnection.sendPacket(new PacketPlayOutViewDistance(worldserver1.getChunkProvider().playerChunkMap.getLoadViewDistance())); // Spigot // Paper - no-tick view distance
+        worldserver.getChunkProvider().playerChunkMap.updateClientViewDistance(entityplayer1);
+        // Nabulus end
         entityplayer1.spawnIn(worldserver1);
         entityplayer1.dead = false;
         entityplayer1.playerConnection.teleport(new Location(worldserver1.getWorld(), entityplayer1.locX(), entityplayer1.locY(), entityplayer1.locZ(), entityplayer1.yaw, entityplayer1.pitch));
-- 
2.26.2

